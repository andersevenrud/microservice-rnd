name: Release Deployment
on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: false
        default: latest
        description: Version number
jobs:
  api:
    if: github.event.inputs.version != 'latest'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: ./.github/actions/publisher
        with:
          package_name: api
          token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ github.event.inputs.version }}
  app:
    if: github.event.inputs.version != 'latest'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: ./.github/actions/publisher
        with:
          package_name: app
          token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ github.event.inputs.version }}
  cli:
    if: github.event.inputs.version != 'latest'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: ./.github/actions/publisher
        with:
          package_name: cli
          token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ github.event.inputs.version }}
  mailer:
    if: github.event.inputs.version != 'latest'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: ./.github/actions/publisher
        with:
          package_name: mailer
          token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ github.event.inputs.version }}
  runner:
    if: github.event.inputs.version != 'latest'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: ./.github/actions/publisher
        with:
          package_name: runner
          token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ github.event.inputs.version }}
  deploy:
    if: ${{ always() && (contains(needs.*.result, 'success') || contains(needs.*.result, 'skipped')) }}
    runs-on: ubuntu-latest
    needs: ['api', 'app', 'cli', 'mailer', 'runner']
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache-dependency-path: deploy/pulumi/package-lock.json
      - run: npm ci
        working-directory: ./deploy/pulumi
      - uses: ./.github/actions/pulumi
        with:
          version: ${{ github.event.inputs.version }}
          token: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          config: ${{ secrets.PULUMI_CONFIG }}
          passphrase: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
      - uses: pulumi/actions@v3
        with:
          command: up
          stack-name: vultr
          work-dir: ./deploy/pulumi
        env:
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
